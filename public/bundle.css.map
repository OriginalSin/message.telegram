{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport config from './config.js';\n\n\texport let name;\n\n\tlet prefix = 'https://api.telegram.org/bot';\n\tlet sendMe = (out) => {\n\t\tfetch(prefix + config.telegram.token + '/sendMessage', {\n\t\t\tmethod: 'POST',\n\t\t\tmode: 'cors',\n\t\t\theaders:{\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tchat_id: config.telegram.chat,\n\t\t\t\ttext: JSON.stringify(out)\n\t\t\t})\n\t\t})\n\t\t\t.then((req) => req.json())\n\t\t\t.then((json) => {\n\t\t\t\tconsole.log(json)\n\t\t\t})\n\t\t\t.catch(console.warn);\n\t};\n\tlet checkForm = (ev) => {\n\t\tlet target = ev.target,\n\t\t\tinputs = target.parentNode.parentNode.getElementsByClassName('form__input'),\n\t\t\tout = {},\n\t\t\terror = false;\n\t\tfor (let i = 0, len = inputs.length; i < len; i++) {\n\t\t\tlet it = inputs[i],\n\t\t\t\tname = it.name,\n\t\t\t\tzn = it.value;\n\t\t\tif (zn) {\n\t\t\t\tit.classList.remove('error');\n\t\t\t\tout[name] = zn;\n\t\t\t} else {\n\t\t\t\tit.classList.add('error');\n\t\t\t\terror = true;\n\t\t\t}\n\t\t}\n\t\tif (error) {\n\t\t} else {\n\t\t\tsendMe(out);\n\t\t}\n\t\t// console.log('checkForm', out);\n\t};\n\t\n</script>\n\n<style>\n\t.error {\n\t\tbackground-color: red;\n\t}\n\t.wrapper, .form__container, .form__title, .form__inputs, .form__buttons {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\t.form__buttons button {\n\t\tmargin: 20px;\n\t\tbackground-color: cyan;\n\t}\n\t@media (max-width: 1024px) {\n\t\t.form__container {\n\t\t\tpadding: 30px 20px 20px 20px;\n\t\t}\n\t}\n\t.form__container {\n\t\tbackground-color: aquamarine;\n\t\tpadding: 45px 20px 20px 20px;\n\t\tflex-direction: column;\n\t}\n\t.form__inputs {\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t\tz-index: 2;\n\t}\n\t.form__input {\n\t\tcolor: #455a64;\n\t\tfont-family: 'roboto', sans-serif;\n\t\tfont-size: 1rem;\n\t\tfont-weight: 500;\n\t\twidth: 100%;\n\t\tborder: 1px solid transparent;\n\t\tborder-radius: 5px;\n\t\tpadding: 15px 20px;\n\t\tmargin-bottom: 18px;\n\t\tfont-size: 14px;\n\t\ttransition: 0.2s;\n\t}\n</style>\n\n<fieldset>\n\t<legend>Связаться со мной</legend>\n\t<div class=\"form__container\">\n\t\t<input class=\"form__input\" type=\"text\" name=\"name\" placeholder=\"Имя\" required=\"\" />\n\t\t<input class=\"form__input\" type=\"email\" name=\"email\" placeholder=\"Email\" required=\"\" />\n\t\t<textarea class=\"form__input form__message\" name=\"mess\" placeholder=\"Ваше сообщение\" required=\"\"></textarea>\n\t</div>\n\t<div class=\"form__buttons\">\n\t\t<button class=\"form__submit error\" on:click={checkForm}>Отправить</button>\n\t\t<button class=\"form__clean\">Очистить</button>\n\t</div>\n</fieldset>"
  ],
  "names": [],
  "mappings": "AAmDC,MAAM,eAAC,CAAC,AACP,gBAAgB,CAAE,GAAG,AACtB,CAAC,AACS,+BAAgB,CAA+B,cAAc,eAAC,CAAC,AACxE,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACpB,CAAC,AACD,6BAAc,CAAC,MAAM,eAAC,CAAC,AACtB,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,AACvB,CAAC,AACD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC3B,gBAAgB,eAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,AAC7B,CAAC,AACF,CAAC,AACD,gBAAgB,eAAC,CAAC,AACjB,gBAAgB,CAAE,UAAU,CAC5B,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5B,cAAc,CAAE,MAAM,AACvB,CAAC,AAMD,YAAY,eAAC,CAAC,AACb,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,QAAQ,CAAC,CAAC,UAAU,CACjC,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CAC7B,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,AACjB,CAAC"
}